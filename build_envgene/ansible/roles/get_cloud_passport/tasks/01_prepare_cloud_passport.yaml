---
- name: 01 prepare archive passport url
  include_tasks: 01.5_prepare_archive_passport_url.yaml
  when:
    - lookup('env', 'GET_PASSPORT', default=false)

- name: 01.1 Download file with custom HTTP headers
  ansible.builtin.get_url:
    url: "{{ archive_url }}"
    dest: "{{ dest_archive_path }}"
    headers:
      PRIVATE-TOKEN: "{{ cred_config[gitlab_token[0]]['data'][gitlab_token[1]] }}"

- name: 01.2 Create directory for cloud-passport
  ansible.builtin.file:
    path: "{{ passport_path }}"
    state: directory

- name: 01.3 Unpack an artifact
  unarchive:
    src: "{{ dest_archive_path }}"
    dest: "{{ dest_unpack_files | dirname }}"

- name: 01.4 Copy discovery files
  block:
    - name: Split "{{ env_name }}" by folder name
      ansible.builtin.set_fact:
        env_paths: "{{ env_name.split('/') }}"

    - name: Check that name of environment "{{ env_name }}" contains cloud name
      fail:
        msg: Cloud passport discovery can be run only for environments with name containing cloud. Provided "{{ env_name }}"
      when: env_paths|length == 1

    - name: Set env_directory for complex env_name "{{ env_name }}"
      ansible.builtin.set_fact:
        discovery_cloud_dir: "{{ envs_directory_path + '/' + env_paths.0 }}"
        final_env_name: "{{ env_paths.1 }}"
        discovery_cloud_name: "{{ env_paths.0 }}"
      when: env_paths|length > 1

    - name: Set cloud "{{ discovery_cloud_name }}" directories and passport files
      set_fact:
        discovery_cloud_passport_dir: "{{ discovery_cloud_dir }}/cloud-passport"
        discovery_sensitive_file: "{{ discovery_cloud_dir }}/cloud-passport/{{ discovery_cloud_name }}-creds.yml"
        old_discovery_sensitive_file: "{{ discovery_cloud_dir }}/cloud-passport/{{ discovery_cloud_name }}-old-creds.yml"
        discovery_cloud_passport: "{{ discovery_cloud_dir }}/cloud-passport/{{ discovery_cloud_name }}.yml"

    - name: Set old_sensitive_file_content
      set_fact:
        old_sensitive_file_content: "{{ lookup('file', '{{ discovery_sensitive_file }}', errors='ignore') }}"

    - name: Create or cleanup directory "{{ discovery_cloud_passport_dir }}" for cloud passport
      ansible.builtin.file:
        path: "{{ discovery_cloud_passport_dir }}"
        state: "{{ item }}"
      with_items:
        - absent
        - directory

    - name: Find unpack files
      find:
        path: "{{ dest_unpack_files }}"
        file_type: file
      register: discovery_files

    - name: Preparation sensitive data
      cmdb:
        cred_file: "{{ item.path }}"
      with_items:
        - "{{ discovery_files.files }}"
      when:
        - "'sensitive' in (item.path | basename)"

    - name: Copy old version of sensitive data
      copy:
        content: "{{ old_sensitive_file_content }}"
        dest: "{{ old_discovery_sensitive_file }}"

    - name: Copy sensitive data
      copy:
        src: "{{ item.path }}"
        dest: "{{ discovery_sensitive_file }}"
      with_items:
        - "{{ discovery_files.files }}"
      when:
        - "'sensitive' in (item.path | basename)"

    - name: Replace template
      ansible.builtin.replace:
        path: "{{ item.path }}"
        regexp: '(.*)secrets(.*)(}})'
        replace: '\1\2 | secrets \3'
      with_items:
        - "{{ discovery_files.files }}"
      when:
        - "'passport' in (item.path | basename)"

    - name: Copy cloud passport
      template:
        src: "{{ item.path }}"
        dest: "{{ discovery_cloud_passport }}"
      with_items:
        - "{{ discovery_files.files }}"
      when:
        - "'passport' in (item.path | basename)"

- name: 01.5 Get secret key for sensitive data
  uri:
    url: "{{ gitlab_vars_api }}/{{ secret_key_var_name }}"
    validate_certs: no
    method: GET
    headers:
      PRIVATE-TOKEN: "{{ cred_config[gitlab_token[0]]['data'][gitlab_token[1]] }}"
    status_code: 200, 404
  register: secret_var_result

- name: 01.6 Set secret_key
  set_fact:
    discovery_secret_key: "{{ secret_var_result.json.value }}"

- name: 01.7 decrypt {{ discovery_sensitive_file }} with discovery tool secret-key
  crypt:
    crypt_type: "decrypt"
    secret_key: "{{ discovery_secret_key }}"
    source_file: "{{ discovery_sensitive_file }}"
    in_place: true
    crypt_backend: Fernet
  no_log: true

- name: 01.8 Add headers to cloud_passport files
  block:
    - name: Find cloud_passport files
      find:
        path: "{{ discovery_cloud_dir }}/cloud-passport/"
        file_type: file
      register: cloud_passport_files

    - name: Add headers to files
      add_header_to_yaml:
        path: "{{ item.path }}"
        text: "{{ header_text }}"
      with_items:
        - "{{ cloud_passport_files.files }}"
      no_log: true

- name: 01.9 Re-encrypt credential-cp file
  block:
    - name: encrypt {{ discovery_sensitive_file }} with instance secret-key
      crypt:
        crypt_type: "encrypt"
        source_file: "{{ discovery_sensitive_file }}"
        minimize_diff: true
        old_encrypted_file: "{{ old_discovery_sensitive_file }}"
        in_place: true

    - name: remove old_discovery_sensitive_file
      ansible.builtin.file:
        path: "{{ old_discovery_sensitive_file }}"
        state: absent
