name: "Release: EnvGene"

run-name: "Release EnvGene: ${{ inputs.version }}"

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        default: '1.0.0'
        type: string
        description: 'Release version (e.g., 1.0.0)'
      dry-run:
        required: false
        type: boolean
        default: false
        description: 'Dry run'
      component:
        default: '[
                  {"name": "qubership-envgene", "file": "./build_envgene/build/Dockerfile", "context": "."},
                  {"name": "qubership-pipegene", "file": "./build_pipegene/build/Dockerfile", "context": "."},
                  {"name": "qubership-effective-set-generator", "file": "./build_effective_set_generator/build/Dockerfile", "context": "."},
                  {"name": "qubership-instance-repo-pipeline", "file": "./github_workflows/instance-repo-pipeline/Dockerfile", "context": "."}
                ]'
        description: 'component'
        required: true

jobs:
  tests:
    runs-on: ubuntu-latest
    container:
      image: python:3.10-slim-bookworm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Tests
        uses: ./.github/actions/run-tests

  check-tag:
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - name: Input parameters
        run: |
          echo "Version: ${{ github.event.inputs.version }}" >> $GITHUB_STEP_SUMMARY

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if tag exists
        id: check_tag
        uses: netcracker/qubership-workflow-hub/actions/tag-checker@main
        with:
          tag: 'v${{ github.event.inputs.version }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Output result
        run: |
          echo "Tag exists: ${{ steps.check_tag.outputs.exists }}"
          echo "Tag name: v${{ github.event.inputs.version }}"

      - name: Fail if tag exists
        if: steps.check_tag.outputs.exists == 'true'
        run: |
          echo "Tag already exists: v${{ github.event.inputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "Tag already exists: v${{ github.event.inputs.version }}"
          exit 1

  tag:
    needs: [check-tag]
    uses: netcracker/qubership-workflow-hub/.github/workflows/tag-creator.yml@main
    with:
      tag-name: v${{ github.event.inputs.version }}

  update_image_tags:
    needs: [tag]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write
    steps:
        - name: "Prepare app token"
          if: ${{ vars.GH_BUMP_VERSION_APP_ID != '' }}
          uses: actions/create-github-app-token@v2
          id: app-token
          with:
            app-id: ${{ vars.GH_BUMP_VERSION_APP_ID }}
            private-key: ${{ secrets.GH_BUMP_VERSION_APP_KEY }}

        - name: Checkout repository
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
            token: ${{ steps.app-token.outputs.token || secrets.GITHUB_TOKEN }}

        - name: Update Docker Image Tags in Pipeline
          run: |
            sed -i "s|qubership-pipegene:[^']*|qubership-pipegene:${{ github.event.inputs.version }}|g" github_workflows/instance-repo-pipeline/.github/workflows/pipeline.yml
            sed -i "s|qubership-envgene:[^']*|qubership-envgene:${{ github.event.inputs.version }}|g" github_workflows/instance-repo-pipeline/.github/workflows/pipeline.yml
            sed -i "s|qubership-effective-set-generator:[^']*|qubership-effective-set-generator:${{ github.event.inputs.version }}|g" github_workflows/instance-repo-pipeline/.github/workflows/pipeline.yml
            sed -i "s|qubership-effective-set-generator-python:[^']*|qubership-effective-set-generator-python:${{ github.event.inputs.version }}|g" github_workflows/instance-repo-pipeline/.github/workflows/pipeline.yml

            if git diff --quiet github_workflows/instance-repo-pipeline/.github/workflows/pipeline.yml; then
              echo "No changes to commit - no images were built or tags were already up to date"
            else
              echo "Updated pipeline.yml with docker tags from job outputs"
            fi

            git diff github_workflows/instance-repo-pipeline/.github/workflows/pipeline.yml || true

            if ! git diff --quiet github_workflows/instance-repo-pipeline/.github/workflows/pipeline.yml; then
              git config --global user.name "qubership-actions[bot]"
              git config --global user.email "qubership-actions[bot]@users.noreply.github.com"
              git add github_workflows/instance-repo-pipeline/.github/workflows/pipeline.yml
              git commit -m "chore: Update docker image tags from job outputs for branch ${{ github.ref_name }}"

              git push origin HEAD:${{ github.ref_name }} || echo "Failed to push changes"
            else
              echo "No changes to commit - skipping git operations"
            fi

  docker-build-publish:
    needs: [update_image_tags]
    uses: netcracker/qubership-workflow-hub/.github/workflows/docker-publish.yml@main
    with:
      ref: v${{ inputs.version }}
      download-artifact: false
      dry-run: ${{ inputs.dry-run }}
      component: ${{ inputs.component }}

  github-release:
    needs: [docker-build-publish]
    uses: netcracker/qubership-workflow-hub/.github/workflows/release-drafter.yml@main
    with:
      version: ${{ github.event.inputs.version }}
      publish: false
