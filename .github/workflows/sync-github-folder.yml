name: "Dev: Sync .github folder across branches"

run-name: "Dev: Sync .github folder across branches"

on:
  workflow_dispatch:
    inputs:
      check_only:
        description: 'Check mode - show differences without syncing'
        required: false
        type: choice
        options:
          - 'false'
          - 'true'
        default: 'false'
      target_branches:
        description: 'Target branches to sync (comma-separated) or "ALL" for all branches'
        required: false
        default: ''
      exclude_branch:
        description: 'Branches to exclude from sync (comma-separated)'
        required: false
        default: ''
      include_files:
        description: 'Specific files/folders to sync (comma-separated, e.g., "actions,workflows/perform_tests.yml"), "ALL" for all .github files, or empty (only when target_branches is empty or "ALL")'
        required: false
        default: ''

jobs:
  sync-github-folder:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get all branches
        id: get-branches
        run: |
          # Get all remote branches excluding main
          BRANCHES=$(git branch -r | grep -v "origin/main" | grep -v "HEAD" | sed 's/origin\///' | tr '\n' ',' | sed 's/,$//')
          echo "branches=$BRANCHES" >> $GITHUB_OUTPUT
          echo "Available branches: $BRANCHES"

      - name: Parse target branches
        id: parse-targets
        run: |
          # Check if user wants all branches
          if [ "${{ github.event.inputs.target_branches }}" = "ALL" ]; then
            TARGET_BRANCHES="${{ steps.get-branches.outputs.branches }}"
          else
            TARGET_BRANCHES="${{ github.event.inputs.target_branches }}"
          fi

          # Process exclude branches
          EXCLUDE_BRANCHES="${{ github.event.inputs.exclude_branch }}"
          echo "exclude_branches=$EXCLUDE_BRANCHES" >> $GITHUB_OUTPUT
          echo "Exclude branches: $EXCLUDE_BRANCHES"

          echo "target_branches=$TARGET_BRANCHES" >> $GITHUB_OUTPUT
          echo "Target branches: $TARGET_BRANCHES"

      - name: Sync .github folder to each branch
        run: |
          chmod +x .github/scripts/sync-github-folder.sh
          .github/scripts/sync-github-folder.sh \
            "${{ steps.parse-targets.outputs.target_branches }}" \
            "${{ steps.parse-targets.outputs.exclude_branches }}" \
            "${{ github.event.inputs.check_only }}" \
            "${{ github.event.inputs.include_files }}" \
            "${{ steps.get-branches.outputs.branches }}"